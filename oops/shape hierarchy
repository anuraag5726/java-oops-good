import java.io.*;
import java.util.*;
interface shape{
    Double pi=22.0/7;
    public double area();
    public double perimeter();
}
class Rectangle implements shape{
    private int length,breadth;
    Rectangle(int length,int breadth){
        this.length=length;
        this.breadth=breadth;
    }
    public double area(){
      return length*breadth;
    }
    public double perimeter(){
        return 2*(length+breadth);
    }
}
class Square implements shape{
    private int side;
    Square(int side){
        this.side=side;
    }
    public double area(){
        return side*side;
    }
    public double perimeter(){
        return 4*side;
    }
}
class Circle implements shape{
    private int r;
    Circle(int r){
        this.r=r;
    }
    public double area(){
        return shape.pi*(r*r);
    }
    public double perimeter(){
        return 2*shape.pi*r;
    }
}
class Display{
    public static void show(shape sh){
        System.out.printf("%.2f %.2f \n",sh.area(),sh.perimeter());
    }
}

public class Solution {

    public static void main(String[] args) {
    Scanner in = new Scanner(System.in);
    int n= in.nextInt();
        List<shape> li = new ArrayList<>();
    for(int i=0;i<=n;i++){
        String[] s1=in.nextLine().split(" ");
        if(s1[0].equals("R")){
            Rectangle r = new Rectangle(Integer.parseInt(s1[1]),Integer.parseInt(s1[2]));
            li.add(r);
        }
        else if(s1[0].equals("C")){
            Circle c = new Circle(Integer.parseInt(s1[1]));
            li.add(c);
        }
        else if(s1[0].equals("S")){
            Square s = new Square(Integer.parseInt(s1[1]));
            li.add(s);
        }
    }
        for(shape sp:li)
        {
            Display.show(sp);
        }
    }
}
